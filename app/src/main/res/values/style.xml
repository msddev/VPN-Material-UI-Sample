<?xml version="1.0" encoding="utf-8"?>
<resources>

    <style name="ShapeAppearanceOverlay.MyApp.Button.Circle" parent="">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">50%</item>
    </style>

    <style name="MaterialAlertDialog.App.Title.Text" parent="MaterialAlertDialog.MaterialComponents.Title.Text">
        <item name="android:textColor">@color/white</item>
    </style>

    <style name="Widget.App.Button" parent="Widget.MaterialComponents.Button.TextButton.Dialog">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.Button.TextButton</item>
        <!--<item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>-->
    </style>

    <style name="Widget.App.Button.Positive" parent="Widget.MaterialComponents.Button.TextButton.Dialog">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.Button.TextButton.Positive</item>
        <!--<item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>-->
    </style>

    <style name="Widget.App.Button.Negative" parent="Widget.MaterialComponents.Button.TextButton.Dialog">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.Button.TextButton.Negative</item>
        <!--<item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>-->
    </style>

    <style name="ThemeOverlay.App.Button.TextButton.Positive" parent="">
        <item name="colorPrimary">@color/color_green_light</item>
    </style>

    <style name="ThemeOverlay.App.Button.TextButton.Negative" parent="">
        <item name="colorPrimary">@color/color_pink_light</item>
    </style>

    <style name="ThemeOverlay.App.Button.TextButton" parent="">
        <item name="colorPrimary">@color/white</item>
    </style>

    <style name="TextInputLayoutStyle" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense">
        <item name="colorPrimaryVariant">@color/color_gray_dark</item>
        <item name="colorPrimary">@color/color_gray_dark</item>
        <item name="hintTextColor">@color/color_gray_dark</item>
        <item name="android:textColorHint">@color/color_gray_dark</item>
        <item name="counterTextColor">@color/color_gray_dark</item>
    </style>

    <style name="Widget.MyApp.Toolbar" parent="Widget.MaterialComponents.Toolbar.Surface">
        <item name="titleTextAppearance">@style/TextAppearance.MyApp.Headline1</item>
        <item name="subtitleTextAppearance">@style/TextAppearance.MyApp.Headline2</item>
        <item name="contentInsetStartWithNavigation">0dp</item>
        <item name="colorSurface">?attr/colorPrimaryVariant</item>
    </style>

    <style name="Widget.MyApp.MyTextInputLayout" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.TextInputLayout</item>
        <item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>
        <!--<item name="hintTextColor">?attr/colorOnSurface</item>-->   //When you added this line it will applies only one color in normal and activate state i.e colorOnSurface color
    </style>

    <style name="ThemeOverlay.App.TextInputLayout" parent="">
        <item name="colorPrimary">@color/white</item>
        <item name="colorSurface">@color/white</item>
        <item name="colorOnSurface">@color/white</item>
        <item name="colorOnPrimary">@color/white</item>
        <item name="colorError">@color/white</item>

        //Text Appearance styles
        <!--<item name="textAppearanceSubtitle1">@style/TextAppearance.App.Subtitle1</item>
        <item name="textAppearanceCaption">@style/TextAppearance.App.Caption</item>-->

        <!--Note: When setting a materialThemeOverlay on a custom TextInputLayout style, don’t forget to set editTextStyle to either a @style/Widget.MaterialComponents.TextInputEditText.* style or to a custom one that inherits from that.
        The TextInputLayout styles set materialThemeOverlay that overrides editTextStyle with the specific TextInputEditText style needed. Therefore, you don’t need to specify a style tag on the edit text.-->
        <item name="editTextStyle">@style/Widget.MaterialComponents.TextInputEditText.OutlinedBox</item>
    </style>

    <style name="ShapeAppearance.App.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">cut</item>
        <item name="cornerSize">4dp</item>
    </style>

    <style name="Widget.App.Slider" parent="Widget.MaterialComponents.Slider">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.Slider</item>
    </style>
    <style name="ThemeOverlay.App.Slider" parent="">
        <item name="colorPrimary">@color/white</item>
        <!--<item name="colorOnPrimary">@color/white</item>
        <item name="colorOnSurface">@color/color_green_light</item>-->
    </style>
</resources>